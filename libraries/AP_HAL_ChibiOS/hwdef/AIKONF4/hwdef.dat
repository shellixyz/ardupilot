# hw definition file for processing by chibios_pins.py
# Omnibus F4 PRO, Omnibus F4 V3 boards
# with F405 mcu, mpu6000 imu, bmp280 barometer, 7456 series osd  and sdcard

MCU STM32F4xx STM32F405xx

HAL_CHIBIOS_ARCH_F405 1

# board ID for firmware load
APJ_BOARD_ID 142

# crystal frequency
OSCILLATOR_HZ 8000000
STM32_PLLM_VALUE 8

# board voltage
STM32_VDD 330U

STM32_ST_USE_TIMER 5

# flash size
FLASH_SIZE_KB 1024
FLASH_RESERVE_START_KB 64

# order of I2C buses
I2C_ORDER I2C1

# order of UARTs
UART_ORDER OTG1 EMPTY EMPTY USART2 UART4

#adc
PC1 BAT_CURR_SENS ADC1 SCALE(1)
PC2 BAT_VOLT_SENS ADC1 SCALE(1)
PC3 RSSI_IN ADC1

#pwm output
PC6 TIM8_CH1 TIM8 PWM(1) GPIO(50)
PC7 TIM8_CH2 TIM8 PWM(2) GPIO(51)
PC8 TIM8_CH3 TIM8 PWM(3) GPIO(52)
PC9 TIM8_CH4 TIM8 PWM(4) GPIO(53)
PB0 TIM3_CH3 TIM3 PWM(5) GPIO(54)
PB1 TIM3_CH4 TIM3 PWM(6) GPIO(55)

PC4 ICM20602_DRDY INPUT

PA4 ICM20602_CS CS
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

PB12 FLASH_CS CS
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

PA15 AT7456E_CS CS
PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PC12 SPI3_MOSI SPI3

# note that this board needs PULLUP on I2C pins
PB8 I2C1_SCL I2C1 PULLUP
PB9 I2C1_SDA I2C1 PULLUP

PA3 USART2_RX USART2
PA2 USART2_TX USART2

# shared with IÂ²C
#PB11 USART3_RX USART3
PB10 USART3_TX USART3

PA0 UART4_TX UART4
PA1 UART4_RX UART4

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

PB4 LED OUTPUT HIGH GPIO(57)
PB5 TIM3_CH2 TIM3 GPIO(56) ALARM

PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1
PC5 VBUS INPUT OPENDRAIN

# UART1 RX as RC input
PA10 TIM1_CH3 TIM1 RCININT PULLDOWN LOW

# SPI Device table 
SPIDEV icm20602   SPI1 DEVID1 ICM20602_CS MODE3 1*MHZ 8*MHZ
SPIDEV dataflash  SPI2 DEVID2 FLASH_CS    MODE3 32*MHZ 32*MHZ
SPIDEV osd        SPI3 DEVID3 AT7456E_CS  MODE0 10*MHZ 10*MHZ

define CONFIG_HAL_BOARD_SUBTYPE HAL_BOARD_SUBTYPE_CHIBIOS_AIKONF4

# one IMU
IMU Invensense SPI:icm20602 ROTATION_YAW_270

# external baro
BARO BMP280 I2C:0:0x76
define HAL_PROBE_EXTERNAL_I2C_BAROS
define HAL_BARO_ALLOW_INIT_NO_BARO

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

define STORAGE_FLASH_PAGE 1
define HAL_STORAGE_SIZE 15360

#define HAL_OS_FATFS_IO 1
#define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
#define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# define default battery setup
define HAL_BATT_VOLT_PIN 12
define HAL_BATT_CURR_PIN 11
define HAL_BATT_VOLT_SCALE 11
define HAL_BATT_CURR_SCALE 18.2

#analog rssi pin (also could be used as analog airspeed input)
# PA0 - ADC123_CH0
define BOARD_RSSI_ANA_PIN 0

define HAL_LOGGING_DATAFLASH

define HAL_GPIO_A_LED_PIN 57

define OSD_ENABLED ENABLED
define HAL_OSD_TYPE_DEFAULT 1

#To complementary channels work we define this
#define STM32_PWM_USE_ADVANCED TRUE

define BOARD_PWM_COUNT_DEFAULT 6

#define CH_DBG_ENABLE_ASSERTS TRUE
#define CH_DBG_ENABLE_CHECKS TRUE
#define CH_DBG_SYSTEM_STATE_CHECK TRUE
#define CH_DBG_ENABLE_STACK_CHECK TRUE

#font for the osd
ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin
