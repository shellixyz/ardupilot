# hw definition file for processing by chibios_pins.py
# for Matek F765-Wing

# MCU class and specific type
MCU STM32F7xx STM32F767xx

# board ID for firmware load
APJ_BOARD_ID 143

# crystal frequency, setup to use external oscillator
OSCILLATOR_HZ 8000000

define STM32_LSECLK   32768U
define STM32_LSEDRV   (3U << 3U)

define STM32_PLLSRC     STM32_PLLSRC_HSE
define STM32_PLLM_VALUE 8
define STM32_PLLN_VALUE 432
define STM32_PLLP_VALUE 2
define STM32_PLLQ_VALUE 9

FLASH_SIZE_KB 2048

# leave 2 sectors free
FLASH_RESERVE_START_KB 96

# board voltage
STM32_VDD 330U

STM32_ST_USE_TIMER 3
define CH_CFG_ST_RESOLUTION 16

# two I2C bus
I2C_ORDER I2C2

# order of UARTs (and USB)
UART_ORDER OTG1 EMPTY USART1 USART2 UART5 USART6 UART7 UART8
#UART_ORDER OTG1 EMPTY USART1 USART2 UART5 UART6

# buzzer
PD15 TIM4_CH4 TIM4 GPIO(80) ALARM LOW
#PD15 BUZZER OUTPUT GPIO(80) LOW
#define HAL_BUZZER_PIN 80
#define HAL_BUZZER_ON 1
#define HAL_BUZZER_OFF 0

# PA10 IO-debug-console
PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# SPI1 for BARO (BMP388)
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1
PA1 BARO_CS CS

# SPI2 for MAX7456 OSD
#PB12 MAX7456_CS CS
#PB13 SPI2_SCK SPI2
#PB14 SPI2_MISO SPI2
#PB15 SPI2_MOSI SPI2

# SPI3 for IMU (ICM20602)
PC10 SPI3_SCK SPI3
PC11 SPI3_MISO SPI3
PC12 SPI3_MOSI SPI3
PA15 IMU_CS CS

PE8 EXTI_ICM20602 INPUT PULLUP

# SPI4 for SDcard
PE4 SDCARD_CS CS
PE2 SPI4_SCK SPI4
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4

# I2C1
#PB6 I2C1_SCL I2C1
#PB7 I2C1_SDA I2C1

# I2C2
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2

PC2 BATT_CURRENT_SENS ADC1 SCALE(1)
PC3 BATT_VOLTAGE_SENS ADC1 SCALE(1)

# define default battery setup
define HAL_BATT_VOLT_PIN 12
define HAL_BATT_CURR_PIN 13
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

# analog RSSI
PC5 RSSI_ADC ADC1
define BOARD_RSSI_ANA_PIN 11

PE0 LED0 OUTPUT LOW GPIO(90) # blue
PD12 LED1 OUTPUT LOW GPIO(91) # green
define HAL_GPIO_A_LED_PIN 91
define HAL_GPIO_B_LED_PIN 90
define HAL_GPIO_LED_OFF 1

# USART1
PA9  USART1_TX USART1
PA10 USART1_RX USART1

# USART2
PA2 USART2_TX USART2 NODMA
#PA3 USART2_RX USART2 NODMA

# USART3 (shared with IÂ²C)
#PB10 USART3_TX USART3 NODMA
#PB11 USART3_RX USART3 NODMA

# UART5
PB6 UART5_TX UART5 NODMA
PB5 UART5_RX UART5 NODMA

# USART6
PC6 USART6_TX USART6 NODMA
PC7 USART6_RX USART6 NODMA

# UART7
PB4 UART7_TX UART7
PB3 UART7_RX UART7

# UART8
#PE0 UART8_RX UART8 NODMA
PE1 UART8_TX UART8 NODMA

# RCIN
PA3 TIM2_CH4 TIM2 RCININT PULLDOWN LOW
#PE13 TIM2_CH4 TIM2 RCININT PULLDOWN LOW

# Motors
PB0 TIM8_CH2N TIM8 PWM(1) GPIO(50)
PB1 TIM8_CH3N TIM8 PWM(2) GPIO(51)
PE9 TIM1_CH1 TIM1 PWM(3) GPIO(52)
PE11 TIM1_CH2 TIM1 PWM(4) GPIO(53)
PE14 TIM1_CH4 TIM1 PWM(5) GPIO(54)
PB7 TIM4_CH2 TIM4 PWM(6) GPIO(55)
#PB8 TIM10_CH1 TIM10 PWM(7) GPIO(56)
#PB9 TIM11_CH1 TIM11 PWM(8) GPIO(57)
PB8 TIM4_CH3 TIM4 PWM(7) GPIO(56)
PB9 TIM4_CH4 TIM4 PWM(8) GPIO(57)

define STM32_PWM_USE_ADVANCED TRUE

# microSD support
#PC8 SDMMC_D0 SDMMC1
#PC9 SDMMC_D1 SDMMC1
#PC10 SDMMC_D2 SDMMC1
#PC11 SDMMC_D3 SDMMC1
#PC12 SDMMC_CK SDMMC1
#PD2 SDMMC_CMD SDMMC1

# GPIOs
#PE4  PINIO1 OUTPUT GPIO(81) LOW
#PE15 PINIO2 OUTPUT GPIO(82) LOW

# 2812 LED
# PA8, TIM1_CH1

DMA_PRIORITY S*

define HAL_STORAGE_SIZE 16384
define STORAGE_FLASH_PAGE 1

# spi devices
SPIDEV bmp388   SPI1 DEVID1 BARO_CS     MODE3   1*MHZ   8*MHZ
SPIDEV icm20602 SPI3 DEVID1 IMU_CS      MODE3   1*MHZ   4*MHZ
SPIDEV sdcard   SPI4 DEVID1 SDCARD_CS   MODE0 400*KHZ  25*MHZ

# XXX
#BARO BMP280 I2C:0:0x76
#define HAL_PROBE_EXTERNAL_I2C_BAROS
#define HAL_BARO_ALLOW_INIT_NO_BARO

# no built-in compass, but probe the i2c bus for all possible
# external compass types
define ALLOW_ARM_NO_COMPASS
define HAL_COMPASS_DEFAULT HAL_COMPASS_NONE
define HAL_PROBE_EXTERNAL_I2C_COMPASSES
define HAL_I2C_INTERNAL_MASK 0
define HAL_COMPASS_AUTO_ROT_DEFAULT 2

# two IMUs. We put icm20602 first as we can sample accel at 4kHz
IMU Invensense SPI:icm20602 ROTATION_PITCH_180
define HAL_DEFAULT_INS_FAST_SAMPLE 1

BARO BMP388 SPI:bmp388

define HAL_OS_FATFS_IO 1
define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# setup for OSD
#define OSD_ENABLED ENABLED
#define HAL_OSD_TYPE_DEFAULT 1
#ROMFS_WILDCARD libraries/AP_OSD/fonts/font*.bin

define BOARD_PWM_COUNT_DEFAULT 8

